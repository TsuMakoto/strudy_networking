ディレクティブ, 説明
aio,非同期ファイルI/Oの使用を有効にする。これは、最近のFreeBSDおよびLinuxディストリビューションのすべてで利用できる。FreeBSDの場合、 aioはsendfuke用のデータをあらかじめロードしておくために用いられることがある。Linuxの場合directioも有効にする必要があるため、 sendfileが自動的に無効となる。
directio,パラメータで指定されたサイズより大きいファイルを配信する際に、OS固有のフラグや関数を有効にする。これはLinuxでaioを用いる際に 必須である。
directio_alignment,directioで用いるアラインメントを設定する。デフォルオ値の512で通常は十分だが、LinuxでXFSを用いる際は、この値を4Kに増やしておく ことを推奨する
open_file_cache,オープン中のファイルディスクリプタ、ディレクトリ検索結果、ファイル検索結果のエラーを格納するキャッシュを設定する
open_file_cache_errors,open_file_cacheによるファイル検索ケッアエラーのキャッシュを有効にする
open_file_cache_min_uses,ファイルディスクリプタをオープンしたままキャッシュ内に保持し続ける上で、open_file_cacheのinactiveパラメータで指定 された時間内に最低何回の使用を必要とするかを設定する。
open_file_cache_valid,open_file_cache内のエントリの有効性をチェックする時間感覚を設定する
postpone_output,Nginxがクライアントに送信するデータの最小サイズを指定する。他の要因がなければ、この値を超えるまではいかなるデータも 送信されない
read_ahead,可能な場合、カーネルはsizeパラメータで指定したサイズまでファイルをあらかじめ読み取っておく。本パラメータは現在のとこFreeBSDと Linuxでのみサポートされている。(Linuxにおいてsizeパラメータは無視される)
sendfile,sendfile(2)を用いることで、あるファイルディスクリプタから別のファイルディスクリプタへのデータの直接コピーを可能とする
sendfile_max_chunk,ワーカプロセスが待機してしまうことを避けるため、1回のsendfile(2) 呼び出しでコピー可能なデータの最大サイズを指定する
